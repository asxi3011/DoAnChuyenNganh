<div class="pd-header">
    <div class="container">
        <div class="pd-w-100">
            <div class="mt-5 text-center fs-4">
                <i class="fas fa-file text-warning"></i>
                <span class="fw-bold">
                    Xác nhận đơn hàng
                </span>
            </div>

            <div class="row my-5">
                <div class="col-6">
                    <div class="pd-12">
                        <div class="d-flex align-items-center py-3 header">
                            <span class="fw-bold fs-5">
                                Giao hàng
                                <img class="img-min"
                                    src="https://minio.thecoffeehouse.com/images/tch-web-order/Delivery2.png" alt="">
                            </span>

                        </div>
                        <div class="line_bottom"></div>
                        <input type="text" name="addressCus" class="form-control input-text-address"
                            placeholder="Địa chỉ" required>
                        <input type="text" name="nameCus" class="form-control input-text-address"
                            placeholder="Tên người nhận" required>
                        <input type="text" name="numberCus" class="form-control input-text-address"
                            placeholder="Số điện thoại" required>
                        <input type="text" name="emailCus" class="form-control input-text-address" placeholder="Email"
                            required>
                        <input type="text" name="noteCus" class="form-control input-text-address"
                            placeholder="Thêm hướng dẫn giao hàng">

                        <div class="d-flex align-items-center py-3 header">
                            <span class="fw-bold fs-5">
                                Phương thức thanh toán
                            </span>

                        </div>
                        <div class="line_bottom"></div>
                        <div class="form-check my-3 fs-5">
                            <input class="form-check-input rad-primary" type="radio" name="radPayment" value="Tiền mặt"
                                id="radPayment" checked>
                            <label class="form-check-label" for="radPayment">
                                <i class="fas fa-money-bill text-success"></i> Tiền mặt
                            </label>
                        </div>
                        <div class="form-check my-3 fs-5">
                            <input class="form-check-input rad-primary" type="radio" name="radPayment" value="VN Pay"
                                id="radPaymentOnline">
                            <label class="form-check-label" for="radPaymentOnline">
                                <i class="fas fa-money-check text-warning"></i></i> VN Pay
                            </label>
                        </div>

                    </div>
                </div>
                <div class="col-6">
                    <div class="bd-cart">
                        <div>
                            <div class="d-flex justify-content-between align-items-center py-3 header">
                                <span class="fw-bold fs-5">
                                    Các món đã chọn
                                </span>
                                <a href="/" class="btn btn-no-background a-none text-dark">
                                    Thêm món
                                </a>
                            </div>
                            <div class="line_bottom">

                            </div>
                            <div class="row" id="listProductCart">

                            </div>

                            <div class="fw-bold fs-5 py-2">
                                Tổng cộng
                            </div>
                            <div class="line_bottom"></div>
                            <div class="">
                                <div class="py-3 d-flex justify-content-between align-items-center bd-bottom">
                                    <span class="">
                                        Thành tiền
                                    </span>
                                    <span id="price_total" class="">

                                    </span>
                                </div>
                                <div class="py-3 d-flex justify-content-between align-items-center bd-bottom">
                                    <span class="">
                                        Phí vận chuyển
                                    </span>
                                    <span id="price_charge_show" class="">

                                    </span>
                                    <span id="price_charge" class="" hidden>30000</span>
                                </div>
                                <div class="py-3 d-flex justify-content-between align-items-center">
                                    <div id="btn_show_modal_KM" class="color-primary pe-cursor">Khuyến mãi</div>
                                    <div id="content-coupon"></div>
                                </div>
                                <div class="bg-getAll py-3">
                                    <form action="/create_payment_url" name="create_payment_url" method="post">
                                    <div class="d-flex align-items-center justify-content-between">
                                            <div class="text-white">
                                                <div>Thành tiền</div>
                                                <div id="price_total_with_charge_show" class="fw-bold"></div>
                                                <input id="price_total_with_charge" name="priceTotal" class="fw-bold" hidden></input>
                                            </div>
                                            <button id="btn_Dat_Hang" type="submit" class="btn btn-light color-primary">
                                                Đặt hàng
                                            </button>
                                    </div>
                                    </form> 
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
</div>
<div class="modal fade" id="modalProduct">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-cart d-flex">
            <div class="p-3 modal-cart-content">
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalCancel">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-cart d-flex">
            <div class="p-3">
                <div class="m-auto text-white fs-3 text-center">
                    <img class="img-50 img-rdus-4" src="/image/empty_cart.jpg" alt="">
                </div>
                <div class="text-center fw-bold fs-4 my-3">
                    Giỏ hàng hiện tại bị trống.
                </div>
                <div class="text-center my-3">
                    <button class="btn btn-modal-cart fw-bold" data-bs-dismiss="modal"> Đặt món </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalHappy">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-cart d-flex">
            <div class="p-3 ">
                <div class="m-auto text-white fs-3 text-center">
                    <img class="img-50 img-rdus-4"
                        src="https://image.freepik.com/free-vector/cute-monkey-astronaut-floating-cartoon-vector-icon-illustration-animal-technology-icon-concept-isolated-premium-vector-flat-cartoon-style_138676-3519.jpg"
                        alt="">
                </div>
                <div class="text-center fw-bold fs-4 my-3">
                    Quý khách Đặt hàng thành công.
                    </br>
                    Vui lòng kiểm tra lại email
                </div>
                <div class="text-center my-3">
                    <button id="btn_comeback" class="btn btn-modal-cart fw-bold" data-bs-dismiss="modal"> Trở lại trang
                        chủ </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalLoading" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-loading d-flex">
            <div class="p-3 ">
                <div class="d-flex justify-content-center">
                    <div class="spinner-border spinner-center color-primary-light" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="mt-5 fw-bold color-primary-light fs-5">
                        Loading...
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        var listProductCart = $("#listProductCart");
        var price_total = $("#price_total");
        var price_charge = $("#price_charge");
        var price_charge_show = $("#price_charge_show");
        var price_total_with_charge = $("#price_total_with_charge");
        var price_total_with_charge_show = $("#price_total_with_charge_show");
        var btn_Dat_Hang = $("#btn_Dat_Hang");
        var modal_cart_content = $(".modal-cart-content");
        var btn_show_modal_KM = $("#btn_show_modal_KM");
        var addressCus = $("input[name=addressCus]");
        var nameCus = $("input[name='nameCus']");
        var numberCus = $("input[name='numberCus']");
        var noteCus = $("input[name='noteCus']");
        var emailCus = $("input[name=emailCus]");
    
        var content_coupon = $("#content-coupon");
        //var socket = io("http://localhost:3030/");
        var Modal = new bootstrap.Modal(document.getElementById('modalCancel'), {
            keyboard: false
        })
        var modalLoading = new bootstrap.Modal(document.getElementById('modalLoading'), {
            keyboard: false
        })
        var modalProduct = new bootstrap.Modal(document.getElementById('modalProduct'), {
            keyboard: false
        })
        var modalHappy = new bootstrap.Modal(document.getElementById('modalHappy'), {
            keyboard: false
        })
        var ModalKM = new bootstrap.Modal(document.getElementById('modalKM'), {
            keyboard: false
        })
        addressCus.val(localStorage.addressCus);
        nameCus.val(localStorage.nameCus);
        numberCus.val(localStorage.numberCus);
        noteCus.val(localStorage.noteCus);
        emailCus.val(localStorage.emailCus);
        content_coupon.text(sessionStorage.coupon);
        if (sessionStorage.arrayCart != null && JSON.parse(sessionStorage.arrayCart).length > 0) {
            var listProduct = JSON.parse(sessionStorage.arrayCart);
            writeHTMLListProduct(listProduct);
            price_charge_show.text(formatter.format(30000));
            price_total.text(formatter.format(getTotalPrice(listProduct)));
            price_total_with_charge_show.text(formatter.format(getTocalPriceWithCharge(listProduct)));
            price_total_with_charge.val(getTocalPriceWithCharge(listProduct));
            console.log(price_total_with_charge.val());
        }
        else {
            Modal.show();
        }
        var myModalEl = document.getElementById('modalCancel')
        myModalEl.addEventListener('hidden.bs.modal', function (event) {
            location.href = "/";
        })
        var myModalHP = document.getElementById('modalHappy')
        myModalHP.addEventListener('hidden.bs.modal', function (event) {
            location.href = "/";
        })
        btn_show_modal_KM.on("click", function (e) {
            ModalKM.show();
        })
        btn_Dat_Hang.on("click", function (e) {
            e.preventDefault();
            modalLoading.show();
            var radPayment = $("input[name=radPayment]:checked");
            var address = addressCus.val();
            var name = nameCus.val();
            var number = numberCus.val();
            var note = noteCus.val();
            var listProduct = JSON.parse(sessionStorage.arrayCart);
            var priceTotal = parseFloat(price_total_with_charge.val());
            var price_ship = parseFloat(price_charge.text());
            var payment = radPayment.val();
            sessionStorage.setItem("priceTotal",priceTotal);
            sessionStorage.setItem("priceShip",price_ship);
            sessionStorage.setItem("payment",payment);
            var price_coupon = sessionStorage.price_coupon;
            var name_coupon = sessionStorage.coupon;
            saveProfile();
                if(radPayment.val()==="VN Pay"){
                    axios.post('/create_payment_url', {
                        priceTotal:priceTotal,
                    })
                    .then(function (responseCode) {
                         var url = responseCode.data;
                        location.href = url;
                    })
                }
                else if(radPayment.val()==="Tiền mặt"){
                axios.post('/order', {
                    noteOrder: note,
                    hotenOrder: name,
                    sdtOrder: number,
                    addressOrder: address,
                    priceCharge: price_ship,
                    priceCoupon: price_coupon,
                    nameCoupon: name_coupon,
                    priceTotal: priceTotal,
                    listProductOrder: listProduct,
                    payment: payment,
                })
                .then(function (response) {
                    clearCart();
                    var idOrder = response.data.idOrder;
                    var mail = emailCus.val();
                    console.log(response.data);
                    console.log(idOrder);
                    var socket = io("http://localhost:3030/");
                    socket.emit("don-hang-moi", response.data);
                    axios.post('/sendMail', {
                        mail: mail,
                        address: address,
                        priceTotal: priceTotal,
                        name: name,
                        idOrder: idOrder,
                    })
                        .then(function (responseMail) {
                            modalLoading.hide();
                            modalHappy.show();

                        })
                })
                .catch(function (error) {
                    console.log(error);
                });
            }
        });      
        function saveProfile() {
            localStorage.setItem("addressCus", addressCus.val());
            localStorage.setItem("nameCus", nameCus.val());
            localStorage.setItem("numberCus", numberCus.val());
            localStorage.setItem("noteCus", noteCus.val());
            localStorage.setItem("emailCus", emailCus.val());
        }
        function clearListProduct() {
            listProductCart.html("");
        }
        function writeHTMLListProduct(list) {
            list.forEach(function (product, index) {
                listProductCart.append(renderListProduct(product.name_product, product.sizeName, product.quanityProduct, product.note, product.priceTotal, index));
            })
            var btn_delte_product_cart = $(".btn-delte-product-cart");
            btn_delte_product_cart.each(function (index) {
                $(this).on("click", function () {
                    var value = listProduct[index];

                    listProduct = listProduct.filter(function (item) {
                        return item !== value
                    })
                    clearListProduct();
                    writeHTMLListProduct(listProduct);
                    sessionStorage.setItem('arrayCart', JSON.stringify(listProduct));
                    sessionStorage.setItem("countQuanity", countQuanity());
                    showCountCart();
                    price_total.text(formatter.format(getTotalPrice(listProduct)));
                    price_total_with_charge.val(getTocalPriceWithCharge(listProduct));
                    price_total_with_charge_show.text(formatter.format(getTocalPriceWithCharge(listProduct)));
                    if (sessionStorage.arrayCart == null || JSON.parse(sessionStorage.arrayCart).length <= 0) {
                        Modal.show();
                    }
                })
            })
            var btn_edit_product_cart = $(".btn-edit-product-cart");
            btn_edit_product_cart.each(function (index) {
                $(this).on("click", function () {
                    var listProduct = JSON.parse(sessionStorage.arrayCart);
                    var currentProduct = listProduct[index];
                    var idProduct = currentProduct.idProduct;
                    axios.get(`/getProduct?id=${idProduct}`)
                        .then(function (response) {
                            // handle success   
                            var product = response.data;
                            console.log(product);
                            var sizeName = product.Size.nameSize;
                            var sizeValue = product.Size.extraSize;
                            var newsize = sizeName.map((size, index) => {
                                return { name: size, value: sizeValue[index] };
                            })
                            modal_cart_content.html(renderModalProduct(product.nameProduct, product.descriptionProduct, product.priceStandard, currentProduct.quanityProduct, newsize, product.imageRepresent, currentProduct.note, product._id));
                            var btnUp = $('#btn_up');
                            var btnDown = $('#btn_down');
                            var lblquanity = $('#lbl_quanity');
                            var details_price_product = $('#details-price-product');
                            var radioSize = $('input:radio[name=sizePrice]');
                            var price_Total_show = $("#price_Total_show");
                            var price_Total = $("#price_Total");
                            var id_product = $('#id_product');
                            var btn_addToCart = $('#btn_addToCart');
                            if (radioSize.is(':checked') === false) {
                                radioSize.filter(`[value=${currentProduct.sizePrice}]`).prop('checked', true);
                            }
                            tinhTien();
                            radioSize.change(function () {
                                tinhTien();
                            })
                            if (parseInt(lblquanity.text()) > 1) {
                                btnDown.removeClass("btn-circle-disable");
                            }
                            btnUp.on("click", function (e) {
                                var current = lblquanity.text();
                                lblquanity.text(parseInt(current) + 1 + "");
                                if (parseInt(lblquanity.text()) > 1) {
                                    btnDown.removeClass("btn-circle-disable");
                                }
                                tinhTien();
                            })

                            btnDown.on("click", function (e) {
                                var current = lblquanity.text();
                                if (!btnDown.hasClass("btn-circle-disable")) {
                                    lblquanity.text(parseInt(current) - 1 + "");
                                    if (parseInt(lblquanity.text()) <= 1) {
                                        btnDown.addClass("btn-circle-disable");
                                    }
                                }
                                tinhTien();
                            })

                            btn_addToCart.on("click", function (e) {
                                e.preventDefault();
                                var idProduct = id_product.val();
                                var sizeName = $('input:radio[name=sizePrice]:checked').attr("id");
                                var sizePrice = $('input:radio[name=sizePrice]:checked').val();
                                var quanityOrder = $('#lbl_quanity').text();
                                var note = $("#inlineFormInputGroup").val();
                                var currentPriceProduct = $("#details-price-product").text();
                                var price_Total = $("#price_Total").text();
                                var name_product = $("#name_product").text();
                                var productCart = {
                                    idProduct: idProduct,
                                    priceTotal: parseFloat(price_Total),
                                    currentPriceProduct: parseFloat(currentPriceProduct),
                                    sizeName: sizeName,
                                    sizePrice: parseFloat(sizePrice),
                                    quanityProduct: parseInt(quanityOrder),
                                    name_product: name_product,
                                    note: note,
                                }
                                if (sessionStorage.arrayCart == null) {
                                    var arrayCart = [];
                                } else {
                                    var arrayCart = JSON.parse(sessionStorage.arrayCart);
                                }
                                arrayCart[index] = productCart;
                                sessionStorage.setItem('arrayCart', JSON.stringify(arrayCart));
                                sessionStorage.setItem("countQuanity", countQuanity());
                                showCountCart();
                                clearListProduct();
                                writeHTMLListProduct(arrayCart);
                                price_total.text(formatter.format(getTotalPrice(arrayCart)));
                                price_total_with_charge_show.text(formatter.format(getTocalPriceWithCharge(arrayCart)));
                                price_total_with_charge.val(getTocalPriceWithCharge(arrayCart));
                                modalProduct.hide();

                            });
                            function tinhTien() {
                                var currentQuanity = parseInt(lblquanity.text());
                                var price = parseFloat(details_price_product.text());
                                var priceExtra = parseFloat($('input[name=sizePrice]:checked').val());
                                console.log($('input[name=sizePrice]:checked'));
                                console.log(currentQuanity);
                                console.log(price);
                                console.log(priceExtra);
                                var total = currentQuanity * (price + priceExtra);
                                console.log(total);
                                price_Total_show.text(formatter.format(total));
                                price_Total.text(total);
                            }
                            modalProduct.show();
                        })
                        .catch(function (error) {
                            // handle error
                            console.log(error);
                        })
                        .then(function () {
                            // always executed
                        });

                })
            })

        }
        function clearCart() {
            sessionStorage.removeItem("arrayCart");
            sessionStorage.removeItem("countQuanity");
        }
        function getTotalPrice(list) {
            if (list != null) {
                return list.reduce(function (total, product) {
                    return total + parseFloat(product.priceTotal);
                }, 0)
            } else {
                return 0;
            }
        }
        function getTocalPriceWithCharge(list) {
            switch (content_coupon.text()) {
                case "19tuoixanh":
                    sessionStorage.setItem("price_coupon", 19000);
                    return getTotalPrice(list) + parseFloat(price_charge.text()) - 19000;
                    break;
                case "30phantram":
                    sessionStorage.setItem("price_coupon", (getTotalPrice(list) * 0.3));
                    return getTotalPrice(list) - (getTotalPrice(list) * 0.3) + parseFloat(price_charge.text());
                    break;
                default:
                    return getTotalPrice(list) + parseFloat(price_charge.text());
            }


        }
    })


</script>