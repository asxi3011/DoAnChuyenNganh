
<div class="container pd-admin">
      <div class="pd-bd-admin box-shadow-1 text-white bg-child-admin">
         <h1>Danh Sách Category</h1>


    <div class="mb-3">
    
    <select name="idCategory" class="form-control" id="slc_choose_category" required>
        <option value="">-Chọn category-</option>
        {{#each data}}
        <option value="{{this._id}}">{{this.nameCategory}}</option>
        {{/each}}
    </select>
   </div>

 
  
   <div class="mb-3">
    <h3  class="form-label">Danh sách các mục con</h3>
      <div class="d-flex my-2 align-items-center justify-content-between">
      <a class="a-none btn btn-dark-custom" id="btn_Bin_itemCategory">
          <i class="fas fa-trash"></i> Thùng rác (<span id="numberTrashItemCategory">0</span>)
      </a>
      <div class="d-flex gap-3"> 
      <span class="d-flex align-items-center gap-2">
      <input class="form-check-input" type="checkbox" value="" id="chkCheckAll"> <span>SelectAll</span> 
      </span>
      <button type="button" class="btn btn-danger" id="btn_Remove_Many"  data-bs-toggle="modal" data-bs-target="#ModalDeleteMany"disabled>
          Xoá các mục được chọn
      </button>
      </div>
    </div>
        <form method="POST" name="removeManyItemCategory">
      <div id='appendContentListChild'>
        
           
        
      </div>
      </form>
        
   </div>
  
  <form method="POST" name="frmStoreItemCategory" action="storeItemCategory">
   <div id="appendLineAddCategory"></div>
     <div class="mb-3 btn btn-success  w-100" id="btn_ThemLine_Category">
        +
  </div>

  <button type="submit" id="btn_submit_Child" class="btn btn-primary" disabled>Lưu</button>

   </form>


    <form action="" name="frmRemoveItemCategory" method="POST"></form>
      </div>
   

</div>

<div class="modal fade" id="ModalDelete" tabindex="-1" aria-labelledby="TitleModalDelete" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="TitleModalDelete">Thông báo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Bạn muốn xoá file này ?
        <div class="fs-normal text-danger"> (Các dữ liệu con bên trong sẽ biến mất.)</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Huỷ bỏ</button>
        <button type="button" class="btn btn-danger del-category" >Xoá </button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="ModalDeleteMany" tabindex="-1" aria-labelledby="TitleModalDeleteMany" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title text-danger" id="TitleModalDeleteMany">Thông báo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Bạn muốn xoá những file này ?
        <div class="fs-normal text-danger"> (Các dữ liệu con bên trong sẽ biến mất.)</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Huỷ bỏ</button>
        <button type="button" class="btn btn-danger del-many-category" >Xoá Tất Cả</button>
      </div>
    </div>
  </div>
</div>

<form name="editItemCategory" method="GET"></form>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded',function(){
   
     var btnThemLine = $('#btn_ThemLine_Category')
      var element_line_category = $('#appendLineAddCategory');
      var elemt_select_category = $('#slc_choose_category');
      var element_line_listChild = $('#appendContentListChild');
      var frmStoreItemCategory = document.forms['frmStoreItemCategory'];
      var frmRemoveItemCategory = document.forms['frmRemoveItemCategory'];
      var btn_submit_Child = $('#btn_submit_Child');
      var btn_Bin_itemCategory = $('#btn_Bin_itemCategory');
      var element_numberTrashItemCategory =$('#numberTrashItemCategory');
     var frmEditItemCategory = document.forms['editItemCategory'];
      var countElemet = 0;
       var storageKey = 'SelectCategory'
       var CategorySelected = sessionStorage.getItem(storageKey);
       elemt_select_category.val(CategorySelected);
       loadDuLieu();
          var chkCheckAll = $('#chkCheckAllnew');
          var checkboxName = 'select_Category[]';
          var CategoryItemcheckbox = $('input[name="select_Category[]"]');
          var btn_Remove_Many = $('#btn_Remove_Manynew')
          checkboxValidation(chkCheckAll,checkboxName,CategoryItemcheckbox,btn_Remove_Many);
        btnThemLine.on('click',function(){
         
        
          if(elemt_select_category.val()){
        
          countElemet++;

          var name ='listCategory';
        element_line_category.append(renderLine(countElemet,name))
        var btn_of_line = $(`.btn-remove-Categroy-line-${countElemet}`);
         var parent_btn_of_line = $(`.number-element-${countElemet}`);
          var element_count_listChild = document.querySelectorAll('.input-child-category')
          toggleDisabledWithLength(element_count_listChild.length,btn_submit_Child);
        btn_of_line.on('click',function(){
          parent_btn_of_line.remove();
            var element_count_listChild = document.querySelectorAll('.input-child-category')
             toggleDisabledWithLength(element_count_listChild.length,btn_submit_Child);
        })
          
          
        }
        else{
          alert('Vui lòng chọn category')
        }


        })

      elemt_select_category.change(function(){
          loadDuLieu();
          
      })
      ModalDelete.addEventListener('show.bs.modal', function (event) {
            // Button that triggered the modal  
             
             var button = event.relatedTarget;
              var idCategory = button.getAttribute('data-idItemCategory')
            // Extract info from data-bs-* attributes
              var delCategory=document.querySelector('.del-category');
         
              delCategory.onclick =function(){
                frmRemoveItemCategory.action =`removeItemCategory/${idCategory}?_method=DELETE`;
                frmRemoveItemCategory.submit();
              }
        })
      
     //Show Modal DeleteMany
        ModalDeleteMany.addEventListener('show.bs.modal', function (event) {
      // Button that triggered the modal  
        var button = event.relatedTarget;
          var delCategory=document.querySelector('.del-many-category');
        delCategory.onclick =function(){
            var frmRemoveManyItemCategory = document.forms['removeManyItemCategory'];
          frmRemoveManyItemCategory.action=`removeManyItemCategory/?_method=DELETE`;
          frmRemoveManyItemCategory.submit();
        }
      })
    btn_submit_Child.on('click',function(e){
          e.preventDefault();
          var nodeListCategory = document.querySelectorAll('#appendLineAddCategory input[name="listCategory"]');
          var valueListCategory = [];
          nodeListCategory.forEach(element=>{
            valueListCategory.push(element.value);
          })
        
          console.log(valueListCategory);
          axios.post('storeItemCategory', {
            idCategory: elemt_select_category.val(),
            listCategory:valueListCategory ,
        })
        .then(function (response) {
          location.reload();
        })
        .catch(function (error) {
          console.log('loi');
        });
        
    })
   
    async function getListCategory(id){
      try{
        const reponse = await axios.get(`getItemCategory/${id}`)
        return reponse
      }  
      catch (error){
        console.log(error);
      }
    }

  function loadDuLieu(){
    if(elemt_select_category.val() != "")
          {
              sessionStorage.setItem(storageKey,elemt_select_category.val());
              var id =elemt_select_category.val();
              const item = getListCategory(id);
              item.then(response=>{  
              
              var dulieu = response.data.Item;
              var slugCategory = response.data.slugCategory;
              var numTrash = response.data.numTrash;
              var htmlItemCategory = [];
              btn_Bin_itemCategory.attr('href',`${slugCategory}/binItemCategory`);
              element_numberTrashItemCategory.html(numTrash);
              dulieu.forEach((element,index)=>{
                htmlItemCategory.push(renderList(index+1,element.name,element.id));
              })
               
              if(htmlItemCategory.length === 0){
                element_line_listChild.html(empty());
              }
              else{
                    element_line_listChild.html(renderTableItemCategory(htmlItemCategory.join("")));
                     var chkCheckAll = $('#chkCheckAll');
                      var checkboxName = 'select_Category[]';
                      var CategoryItemcheckbox = $('input[name="select_Category[]"]');
                      var btn_Remove_Many = $('#btn_Remove_Many')
                      checkboxValidation(chkCheckAll,checkboxName,CategoryItemcheckbox,btn_Remove_Many);
                    var btn_edit_Item =$('.btn-edit-Item');
                    btn_edit_Item.on('click',function(e){
                      idItemCategory = e.target.value;
                      frmEditItemCategory.action = `ItemCategory/edit/${idItemCategory}`;
                      frmEditItemCategory.submit();
                    })
              }
              
          })
          }
    else{
       element_line_listChild.html(`<div class="text-danger">Vui lòng chọn category</div>`);
    }
      
  }
  
  
  })

</script>