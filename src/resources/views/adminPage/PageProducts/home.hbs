<div class="container pd-admin">
  <div class="pd-bd-admin box-shadow-1 text-dark bg-child-admin">
    <div>
      <h3 class="text-center fw-bold">Danh sách sản phẩm</h3>
      <div class="d-flex my-2 align-items-center justify-content-between">
        <a class="a-none btn bg-gradient-primary text-white" id="btn_Trash_Product">
          <i class="fas fa-trash"></i> Thùng rác <span id="number_deleted"></span>
        </a>
      </div>
      <select name="idCategory" class="form-select" id="slc_choose_category" required>
        <option value="" selected hidden>-Chọn category-</option>
        {{#each dataCategory}}
        <option value="{{this._id}}">{{this.nameCategory}}</option>
        {{/each}}
      </select>

    </div>
      <div id="appendTable" class="my-3">
      </div>
  </div>
</div>
<form name="frmRemoveProduct" method="POST"></form>
<div class="modal fade" id="ModalDelete" tabindex="-1" aria-labelledby="TitleModalDelete" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="TitleModalDelete">Thông báo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Bạn muốn xoá file này ?
        <div class="fs-normal text-danger"> (Các dữ liệu con bên trong sẽ biến mất.)</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Huỷ bỏ</button>
        <button type="button" class="btn btn-danger del-category">Xoá </button>
      </div>
    </div>
  </div>
</div>
<form method="GET" name="renderEDIT"></form>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    var elemt_select_category = $('#slc_choose_category');
    var appenHTMLSpecification_products = $('#appenHTMLSpecification_products');
    var btn_Trash_Product = $('#btn_Trash_Product');
    var appendTable = $('#appendTable');
    var countElemet = 0;
    var countMauElement = 0;
    var frmRemoveProduct = document.forms['frmRemoveProduct'];
    var CategoryKey = 'SelectCategoryProduct'
    var categorySelected = sessionStorage.getItem(CategoryKey);
    var renderEDIT = document.forms['renderEDIT'];
    var number_deleted = $("#number_deleted");
    elemt_select_category.val(categorySelected);
    loadDuLieu();
    elemt_select_category.change(function () {
      if (elemt_select_category.val() == "") {
        $('#modalCancel').modal("show");
        var categorySelected = sessionStorage.getItem(CategoryKey);
        elemt_select_category.val(categorySelected);
      }
      loadDuLieu();
    })
    var ModalDelete = document.getElementById('ModalDelete')
    ModalDelete.addEventListener('show.bs.modal', function (event) {
      // Button that triggered the modal
      var button = event.relatedTarget
      // Extract info from data-bs-* attributes
      var idProduct = button.getAttribute('data-idItemCategory')
      var delCategory = document.querySelector('.del-category');
      delCategory.onclick = function () {
        frmRemoveProduct.action = `removeProduct/${idProduct}?_method=DELETE`;
        frmRemoveProduct.submit();
      }
    })

    function loadDuLieu() {
      if (elemt_select_category.val() != "") {
        sessionStorage.setItem(CategoryKey, elemt_select_category.val());
        var id = elemt_select_category.val(); // lấy id category từ thanh select
        console.log(id);
        const item = getListProduct(id);
        btn_Trash_Product.on("click", function () {
          btn_Trash_Product.attr("href", `binProduct/${id}`)
        })
        item.then(response => {
          console.log(response);
          number_deleted.html(`(${response.data.dataCount})`)
          if (response.data.dataProduct.length > 0) {
            var products = response.data.dataProduct;
            var htmlRowTable = [];
            products.forEach((element, index) => {
              console.log(element.imageRepresent);
              htmlRowTable.push(renderTableListProduct(index + 1, element.nameProduct, element.imageRepresent, element.priceStandard, element.status, element._id))
            })
            if (htmlRowTable != "") {
              var htmlFullTable = renderTableProduct(htmlRowTable.join(" "));
              appendTable.html(htmlFullTable);
              var btn_edit_Item = $('.btn-edit-Item');
              btn_edit_Item.on('click', function (e) {
                idItemCategory = e.target.value;
                renderEDIT.action = `editProduct/${idItemCategory}`;
                renderEDIT.submit();
              })
              var dataTable = $("#table_product").DataTable({
                "lengthMenu": [[5, 10, -1], [5, 10, "Tất cả"]]
              });

            }
          }
          else {
            appendTable.html(empty());
          }

        })
      }
    }
    async function getListProduct(id) {
      try {
        const reponse = await axios.get(`getProducts/${id}`)
        return reponse
      }
      catch (error) {
        console.log(error);
      }
    }
  })

</script>